plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.forsrc.client'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://mvnrepository.com/'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springBootAdminVersion', "2.1.6")
    set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    //forsrc
    compile 'io.github.fengsql:forsrc-common:1.0.0.04'
    compile 'io.github.fengsql:forsrc-data:0.0.3'

}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// 清除lib
task myClearLib(type: Delete) {
    delete "$buildDir/libs/lib"
}

// 拷贝lib
task myCopyLib(type: Copy) {
    from configurations.compileClasspath
    into "$buildDir/libs/lib"
}

bootJar {
    excludes = ["*.jar", "*.yml"]

    // lib目录的清除和复制任务
    dependsOn myClearLib
    dependsOn myCopyLib

    // 指定依赖包的路径，运行时不再需要指定 java.ext.dir 或 loader.path 参数。
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}
