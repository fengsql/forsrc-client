plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.forsrc.client'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    //去掉 log4j2 以解决冲突
    all*.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

repositories {
    mavenCentral()
    maven {
        url 'https://mvnrepository.com/'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springBootAdminVersion', "2.1.6")
    set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    //redis
    compile 'redis.clients:jedis:3.5.2'
    //alibaba
    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.2.11'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.60'
    //guava
    compile 'com.google.guava:guava:28.1-jre'
    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    // swagger http://localhost:8088/doc.html
    compile 'com.github.xiaoymin:knife4j-spring-boot-starter:2.0.3'
    //poi
    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    //mysql
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.46'
    //forsrc
//    compile 'io.github.fengsql:forsrc-common:0.0.1'
//    compile 'io.github.fengsql:forsrc-common:1.0'
    compile 'io.github.fengsql:forsrc-data:0.0.1'

}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// 清除lib
task myClearLib(type: Delete) {
    delete "$buildDir/libs/lib"
}

// 拷贝lib
task myCopyLib(type: Copy) {
    from configurations.compileClasspath
    into "$buildDir\\libs\\lib"
}

bootJar {
    excludes = ["*.jar", "*.yml"]

    // lib目录的清除和复制任务
    dependsOn myClearLib
    dependsOn myCopyLib

    // 指定依赖包的路径，运行时不再需要指定 java.ext.dir 或 loader.path 参数。
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}
