server:
  port: ${application.port}
  tomcat:
    accept-count: 500
    threads:
      max: 500
      min-spare: 200

spring:
  application:
    name: ${application.name}
  profiles:
    include: main
    #
#    active: fava-core
#    active: forsrc-data
#    active: dpi
#    active: store
#    active: flink
    active: aatp
#    active: aatp-algo
#    active: aatp-store
#    active: aimp
#    active: callnvd
#    active: rtdg
#    active: hwqk
#    active: wldp
#    active: example

#    active: prd
  boot:
    admin:
      client:
        enabled: true
        auto-registration: true
        instance:
          prefer-ip: true
  main:
    allow-bean-definition-overriding: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://${forsrc.datasource.host}:${forsrc.datasource.port}/information_schema?serverTimezone=PRC&autoReconnect=true&characterEncoding=utf8&useUnicode=true&useSSL=false
    username: ${forsrc.datasource.username}
    password: ${forsrc.datasource.password}
#    driver-class-name: com.mysql.cj.jdbc.Driver
    driver: com.mysql.jdbc.Driver
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 60000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      filters: stat,wall
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 2000
  liquibase:
    enabled: false
  thymeleaf:
    cache: false
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html
  web:
    resources:
      static-locations: classpath:/templates/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

mybatis:
  mapper-locations: classpath*:mybatis/**/*.xml

logging:
  level:
    root: ${log.level.root}
    com.project.local: ${log.level.root}
    com.project.local.repository: ${log.level.root}
    com.project.local.mvc.dao: ${log.level.dao}
  file:
    name: ${log.file}

thread:
  pool:
    executor:
      corePoolSize: 10
      maxPoolSize: 50
      queueCapacity: 100
      keepAliveSeconds: 300
      awaitTerminationSeconds: 60  #设置线程池中任务的等待时间，如果超过这个时候还没有销毁就强制销毁，而不是阻塞住
      threadNamePrefix: "taskExecutor-"
    scheduler:
      poolSize: 10
      awaitTerminationSeconds: 60  #
      threadNamePrefix: "taskScheduler-"

okhttp:
  connect-timeout: 30
  read-timeout: 30
  write-timeout: 30
  # 连接池中整体的空闲连接的最大数量
  max-idle-connections: 200
  # 连接空闲时间最多为 300 秒
  keep-alive-duration: 300

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

feign:
  hystrix:
    enabled: true

token:
  key: L5H^k6U4a&Cf3J!k
  valid-day: 15

forsrc:
  server:
#    host: https://www.forsrc.com
#    host: localhost
    host: 47.101.163.238
    port: 6100
    path:
      generator: forsrc/generator
      download: forsrc/download